{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cuong Tran Vu\\\\ba-phase3\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport Papa from 'papaparse';\n\n// components\nimport PaperEntry from '../components/PaperEntry';\nimport Header from '../components/Header';\nimport Filter from '../components/Filter';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  setChosenPaper\n}) => {\n  _s();\n  // States\n  const [papers, setPapers] = useState(null); // array an paper Objekten [{paper 1..., paper 2..., ...}]\n  // Übersetzt wäre das:\n  // papers = null\n  // wenn wert von papers geändert wird:\n  // papers = <neuer Wert> (aber ist nicht erlaubt)\n  // ---\n  // Wert von papers ändern:\n  // setPapers(<neuer Wert>)\n  const fileInputRef = useRef(null);\n  const [startYear, setStartYear] = useState(null);\n  const [endYear, setEndYear] = useState(null);\n  const [modeling, setModeling] = useState(false);\n  const [extraction, setExtraction] = useState(false);\n  const [verification, setVerification] = useState(false);\n  const [monitoring, setMonitoring] = useState(false);\n  const [audit, setAudit] = useState(false);\n  const [reporting, setReporting] = useState(false);\n  const [explanation, setExplanation] = useState(false);\n  const [recovery, setRecovery] = useState(false);\n  const [resolution, setResolution] = useState(false);\n  const [regulatoryDocuments, setRegulatoryDocuments] = useState(false);\n  const [pureTextRequirements, setPureTextRequirements] = useState(false);\n  const [internalPolicies, setInternalPolicies] = useState(false);\n  const [bpModels, setBpModels] = useState(false);\n  const [bpDescripion, setBpDescripion] = useState(false);\n  const [eventLogs, setEventLogs] = useState(false);\n  const [formalizedConstraints, setFormalizedConstraints] = useState(false);\n  const [semiformalizedConstraints, setSemiformalizedConstraints] = useState(false);\n  const [natureOfData, setNatureOfData] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  console.log(\"searchTerm\", searchTerm);\n\n  // useEffect hook: rufe diesen Code nur einmalig auf (wenn Home Component erstmalig gerendert wird)\n  useEffect(() => {\n    const fetchPapers = async () => {\n      //quasi das gleiche was zum testen vorher in Postman gemacht wurde, GET all papers aufrufen\n      const response = await fetch('/api/papers');\n      // response in json Format umwandeln\n      const json = await response.json();\n\n      // Statuscode = 2xx => alles ok mit der response\n      if (response.ok) {\n        setPapers(json);\n        // weil papers = json IST NICHT VALIDE\n      }\n    };\n    fetchPapers();\n  }, [startYear, endYear, modeling, extraction, verification, monitoring, audit, reporting, explanation, recovery, resolution]);\n\n  // Alle Papers löschen\n  const handleDeleteAll = async () => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete ALL papers? This cannot be undone.\");\n    if (!confirmDelete) return;\n    try {\n      const res = await fetch('/api/papers', {\n        method: 'DELETE'\n      });\n      if (res.ok) {\n        alert('All papers deleted!');\n        window.location.reload();\n      } else {\n        const error = await res.json();\n        alert('Failed to delete papers: ' + error.error);\n      }\n    } catch (err) {\n      console.error('Error deleting all papers:', err);\n      alert('Something went wrong while deleting.');\n    }\n  };\n\n  // Funktionen, um den Fileexplorer zu öffnen und die ausgewählte .csv-Datei in die Datenbank einzulesen\n\n  //File Explorer öffnen\n  const handleInsertClick = () => {\n    fileInputRef.current.click();\n  };\n\n  /* Paper in Database speichern\r\n  Das eingesetzte csv file muss folgende Bedingungen erfüllen:\r\n  1) Semikolon als Trennzeichen\r\n  2) 1. Zeile ist der Header, der die Spaltennamen enthält:\r\n  2.1) Mögliche Spaltennamen sind:  title,abstract,numberOfCitations,doi,year,typeOfPaper,dataAccessible,BPC_Task_ComplianceElicitation_Modeling,BPC_Task_ComplianceElicitation_Extraction,BPC_Task_ComplianceChecking_Verification,BPC_Task_ComplianceChecking_EnforcementMonitoring,BPC_Task_ComplianceChecking_Audit,BPC_Task_ComplianceAnalysis_Reporting,BPC_Task_ComplianceAnalysis_Explanation,BPC_Task_ComplianceEnhancement_Recovery,BPC_Task_ComplianceEnhancement_Resolution,BPC_Task_Others,TypeOfData_RegulatoryDocuments,TypeOfData_PureTextRequirements,TypeOfData_InternalPolicies,TypeOfData_BPModels,TypeOfData_BPDescription,TypeOfData_EventLogs,TypeOfData_FormalizedConstraints,TypeOfData_SemiformalizedConstraints,TypeOfData_Others,FAQ_OtherDataInFuture,FAQ_DataProcessed,FAQ_DataConverter,FAQ_LimitationsOfDataset,FAQ_NatureOfData,FAQ_MoreThanOneVersion,FAQ_ComplianceLevelOrDegree,FAQ_Stakeholders\r\n  2.2) Groß-/Kleinschreibung ist egal\r\n  2.3) Reihenfolge der Spalten ist egal\r\n  3) Ab der 2. Zeile folgen die Einträge\r\n  3.1) Einträge dürfen kein Semikolon enthalten\r\n  3.2) Leeres Feld im Eintrag ist \"\"\r\n  */\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    // Mal kucken ob das file überhaupt existiert\n    if (!file) return;\n    /*\r\n                // Header (1. Zeile im csv) und Rows extrahieren\r\n                const text = await file.text();\r\n                const rows = text.split('\\n').map(row => row.trim()).filter(Boolean);\r\n                const headers = rows[0].split(';').map(h => h.trim());\r\n            \r\n                // JSON bauen mit den Header Feldern und den dazugehörigen Values\r\n                const entries = rows.slice(1).map(row => {\r\n                    const values = row.split(';').map(v => v.trim());\r\n                    const obj = {};\r\n                    headers.forEach((header, i) => {\r\n                    obj[header] = values[i];\r\n                    });\r\n                    return obj;\r\n                });\r\n    */\n    Papa.parse(file, {\n      header: true,\n      delimiter: ';',\n      skipEmptyLines: true,\n      complete: async function (results) {\n        console.log('Parsed data:', results.data);\n        for (const entry of results.data) {\n          try {\n            const res = await fetch('/api/papers', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(entry)\n            });\n            if (!res.ok) {\n              console.error('Failed to insert paper:', entry, await res.text());\n            }\n          } catch (err) {\n            console.error('Fetch error:', err);\n          }\n        }\n        alert('All data inserted!');\n      },\n      error: function (error) {\n        console.error('Error parsing CSV:', error);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        setStartYear: setStartYear,\n        setEndYear: setEndYear,\n        setModeling: setModeling,\n        setExtraction: setExtraction,\n        setVerification: setVerification,\n        setMonitoring: setMonitoring,\n        setAudit: setAudit,\n        setReporting: setReporting,\n        setExplanation: setExplanation,\n        setRecovery: setRecovery,\n        setResolution: setResolution,\n        setRegulatoryDocuments: setRegulatoryDocuments,\n        setPureTextRequirements: setPureTextRequirements,\n        setInternalPolicies: setInternalPolicies,\n        setBpModels: setBpModels,\n        setBpDescripion: setBpDescripion,\n        setEventLogs: setEventLogs,\n        setFormalizedConstraints: setFormalizedConstraints,\n        setSemiformalizedConstraints: setSemiformalizedConstraints,\n        natureOfData: natureOfData,\n        setNatureOfData: setNatureOfData,\n        setSearchTerm: setSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"insert_data\",\n          onClick: handleInsertClick,\n          children: \"Insert Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete_data\",\n          onClick: handleDeleteAll,\n          children: \"Delete All Papers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-scroll-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"papers\",\n            children: papers && papers.map(paper => {\n              const inYearRange = startYear === null && endYear === null || paper.year >= startYear && paper.year <= endYear;\n              const acceptedFocusValues = [\"Main Focus\", \"Secondary Focus\", \"Mentioned in Future Work\"];\n              const modelingMatch = modeling ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceElicitation_Modeling) : true;\n              const extractionMatch = extraction ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceElicitation_Extraction) : true;\n              const verificationMatch = verification ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceChecking_Verification) : true;\n              const monitoringMatch = monitoring ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceChecking_EnforcementMonitoring) : true;\n              const auditMatch = audit ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceChecking_Audit) : true;\n              const reportingMatch = reporting ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceAnalysis_Reporting) : true;\n              const explanationMatch = explanation ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceAnalysis_Explanation) : true;\n              const recoveryMatch = recovery ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceEnhancement_Recovery) : true;\n              const resolutionMatch = resolution ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceEnhancement_Resolution) : true;\n              const regulatoryDocumentsMatch = regulatoryDocuments ? paper.TypeOfData_RegulatoryDocuments.toLowerCase().startsWith(\"yes\") : true;\n              const pureTextRequirementsMatch = pureTextRequirements ? paper.TypeOfData_PureTextRequirements.toLowerCase().startsWith(\"yes\") : true;\n              const internalPoliciesMatch = internalPolicies ? paper.TypeOfData_InternalPolicies.toLowerCase().startsWith(\"yes\") : true;\n              const bpModelsMatch = bpModels ? paper.TypeOfData_BPModels.toLowerCase().startsWith(\"yes\") : true;\n              const bpDescripionMatch = bpDescripion ? paper.TypeOfData_BPDescription.toLowerCase().startsWith(\"yes\") : true;\n              const eventLogsMatch = eventLogs ? paper.TypeOfData_EventLogs.toLowerCase().startsWith(\"yes\") : true;\n              const formalizedConstraintsMatch = formalizedConstraints ? paper.TypeOfData_FormalizedConstraints.toLowerCase().startsWith(\"yes\") : true;\n              const semiformalizedConstraintsMatch = semiformalizedConstraints ? paper.TypeOfData_SemiformalizedConstraints.toLowerCase().startsWith(\"yes\") : true;\n              const natureOfDataSyntheticMatch = natureOfData.toLowerCase() === \"synthetic\" ? paper.FAQ_NatureOfData.toLowerCase() === \"synthetic\" : true;\n              const natureOfDataRealworldMatch = natureOfData.toLowerCase() === \"real-world\" ? paper.FAQ_NatureOfData.toLowerCase() === \"real-world\" : true;\n              const matchesAll = inYearRange && modelingMatch && extractionMatch && verificationMatch && monitoringMatch && auditMatch && reportingMatch && explanationMatch && recoveryMatch && resolutionMatch && regulatoryDocumentsMatch && pureTextRequirementsMatch && internalPoliciesMatch && bpModelsMatch && bpDescripionMatch && eventLogsMatch && formalizedConstraintsMatch && semiformalizedConstraintsMatch && natureOfDataSyntheticMatch && natureOfDataRealworldMatch && paper.doi.includes(searchTerm);\n              return matchesAll && /*#__PURE__*/_jsxDEV(PaperEntry, {\n                paper: paper,\n                setChosenPaper: setChosenPaper\n              }, paper._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 35\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n};\n_s(Home, \"NqMcVPnysjIVQmb9P+3IXw+u+60=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useRef","Papa","PaperEntry","Header","Filter","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","setChosenPaper","_s","papers","setPapers","fileInputRef","startYear","setStartYear","endYear","setEndYear","modeling","setModeling","extraction","setExtraction","verification","setVerification","monitoring","setMonitoring","audit","setAudit","reporting","setReporting","explanation","setExplanation","recovery","setRecovery","resolution","setResolution","regulatoryDocuments","setRegulatoryDocuments","pureTextRequirements","setPureTextRequirements","internalPolicies","setInternalPolicies","bpModels","setBpModels","bpDescripion","setBpDescripion","eventLogs","setEventLogs","formalizedConstraints","setFormalizedConstraints","semiformalizedConstraints","setSemiformalizedConstraints","natureOfData","setNatureOfData","searchTerm","setSearchTerm","console","log","fetchPapers","response","fetch","json","ok","handleDeleteAll","confirmDelete","window","confirm","res","method","alert","location","reload","error","err","handleInsertClick","current","click","handleFileUpload","e","file","target","files","parse","header","delimiter","skipEmptyLines","complete","results","data","entry","headers","body","JSON","stringify","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","ref","type","accept","onChange","style","display","map","paper","inYearRange","year","acceptedFocusValues","modelingMatch","includes","BPC_Task_ComplianceElicitation_Modeling","extractionMatch","BPC_Task_ComplianceElicitation_Extraction","verificationMatch","BPC_Task_ComplianceChecking_Verification","monitoringMatch","BPC_Task_ComplianceChecking_EnforcementMonitoring","auditMatch","BPC_Task_ComplianceChecking_Audit","reportingMatch","BPC_Task_ComplianceAnalysis_Reporting","explanationMatch","BPC_Task_ComplianceAnalysis_Explanation","recoveryMatch","BPC_Task_ComplianceEnhancement_Recovery","resolutionMatch","BPC_Task_ComplianceEnhancement_Resolution","regulatoryDocumentsMatch","TypeOfData_RegulatoryDocuments","toLowerCase","startsWith","pureTextRequirementsMatch","TypeOfData_PureTextRequirements","internalPoliciesMatch","TypeOfData_InternalPolicies","bpModelsMatch","TypeOfData_BPModels","bpDescripionMatch","TypeOfData_BPDescription","eventLogsMatch","TypeOfData_EventLogs","formalizedConstraintsMatch","TypeOfData_FormalizedConstraints","semiformalizedConstraintsMatch","TypeOfData_SemiformalizedConstraints","natureOfDataSyntheticMatch","FAQ_NatureOfData","natureOfDataRealworldMatch","matchesAll","doi","_id","_c","$RefreshReg$"],"sources":["C:/Users/Cuong Tran Vu/ba-phase3/frontend/src/pages/Home.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react'\r\nimport Papa from 'papaparse';\r\n\r\n// components\r\nimport PaperEntry from '../components/PaperEntry'\r\nimport Header from '../components/Header'\r\nimport Filter from '../components/Filter'\r\n\r\nconst Home = ({setChosenPaper }) => {\r\n    // States\r\n    const [papers, setPapers] = useState(null) // array an paper Objekten [{paper 1..., paper 2..., ...}]\r\n    // Übersetzt wäre das:\r\n    // papers = null\r\n    // wenn wert von papers geändert wird:\r\n    // papers = <neuer Wert> (aber ist nicht erlaubt)\r\n    // ---\r\n    // Wert von papers ändern:\r\n    // setPapers(<neuer Wert>)\r\n    const fileInputRef = useRef(null);\r\n    const [startYear, setStartYear] = useState(null)\r\n    const [endYear, setEndYear] = useState(null)\r\n    const [modeling, setModeling] = useState(false)\r\n    const [extraction, setExtraction] = useState(false)\r\n    const [verification, setVerification] = useState(false)\r\n    const [monitoring, setMonitoring] = useState(false)\r\n    const [audit, setAudit] = useState(false)\r\n    const [reporting, setReporting] = useState(false)\r\n    const [explanation, setExplanation] = useState(false)\r\n    const [recovery, setRecovery] = useState(false)\r\n    const [resolution, setResolution] = useState(false)\r\n\r\n    const [regulatoryDocuments, setRegulatoryDocuments] = useState(false)\r\n    const [pureTextRequirements, setPureTextRequirements] = useState(false)\r\n    const [internalPolicies, setInternalPolicies] = useState(false)\r\n    const [bpModels, setBpModels] = useState(false)\r\n    const [bpDescripion, setBpDescripion] = useState(false)\r\n    const [eventLogs, setEventLogs] = useState(false)\r\n    const [formalizedConstraints, setFormalizedConstraints] = useState(false)\r\n    const [semiformalizedConstraints, setSemiformalizedConstraints] = useState(false)\r\n\r\n    const [natureOfData, setNatureOfData] = useState(\"\")\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    console.log(\"searchTerm\", searchTerm)\r\n\r\n    // useEffect hook: rufe diesen Code nur einmalig auf (wenn Home Component erstmalig gerendert wird)\r\n    useEffect(() => {\r\n        const fetchPapers = async () => {\r\n            //quasi das gleiche was zum testen vorher in Postman gemacht wurde, GET all papers aufrufen\r\n            const response = await fetch('/api/papers')\r\n            // response in json Format umwandeln\r\n            const json = await response.json()\r\n\r\n            // Statuscode = 2xx => alles ok mit der response\r\n            if (response.ok) {\r\n                setPapers(json)\r\n                // weil papers = json IST NICHT VALIDE\r\n            }\r\n        }\r\n\r\n        fetchPapers()\r\n    }, [startYear, endYear, modeling, extraction, verification, monitoring, audit, reporting, explanation, recovery, resolution])\r\n\r\n    // Alle Papers löschen\r\n    const handleDeleteAll = async () => {\r\n        const confirmDelete = window.confirm(\"Are you sure you want to delete ALL papers? This cannot be undone.\");\r\n      \r\n        if (!confirmDelete) return;\r\n      \r\n        try {\r\n          const res = await fetch('/api/papers', {\r\n            method: 'DELETE',\r\n          });\r\n      \r\n          if (res.ok) {\r\n            alert('All papers deleted!');\r\n            window.location.reload();\r\n          } else {\r\n            const error = await res.json();\r\n            alert('Failed to delete papers: ' + error.error);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error deleting all papers:', err);\r\n          alert('Something went wrong while deleting.');\r\n        }\r\n      };\r\n\r\n    // Funktionen, um den Fileexplorer zu öffnen und die ausgewählte .csv-Datei in die Datenbank einzulesen\r\n\r\n    //File Explorer öffnen\r\n    const handleInsertClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n    \r\n    /* Paper in Database speichern\r\nDas eingesetzte csv file muss folgende Bedingungen erfüllen:\r\n1) Semikolon als Trennzeichen\r\n2) 1. Zeile ist der Header, der die Spaltennamen enthält:\r\n    2.1) Mögliche Spaltennamen sind:  title,abstract,numberOfCitations,doi,year,typeOfPaper,dataAccessible,BPC_Task_ComplianceElicitation_Modeling,BPC_Task_ComplianceElicitation_Extraction,BPC_Task_ComplianceChecking_Verification,BPC_Task_ComplianceChecking_EnforcementMonitoring,BPC_Task_ComplianceChecking_Audit,BPC_Task_ComplianceAnalysis_Reporting,BPC_Task_ComplianceAnalysis_Explanation,BPC_Task_ComplianceEnhancement_Recovery,BPC_Task_ComplianceEnhancement_Resolution,BPC_Task_Others,TypeOfData_RegulatoryDocuments,TypeOfData_PureTextRequirements,TypeOfData_InternalPolicies,TypeOfData_BPModels,TypeOfData_BPDescription,TypeOfData_EventLogs,TypeOfData_FormalizedConstraints,TypeOfData_SemiformalizedConstraints,TypeOfData_Others,FAQ_OtherDataInFuture,FAQ_DataProcessed,FAQ_DataConverter,FAQ_LimitationsOfDataset,FAQ_NatureOfData,FAQ_MoreThanOneVersion,FAQ_ComplianceLevelOrDegree,FAQ_Stakeholders\r\n    2.2) Groß-/Kleinschreibung ist egal\r\n    2.3) Reihenfolge der Spalten ist egal\r\n3) Ab der 2. Zeile folgen die Einträge\r\n    3.1) Einträge dürfen kein Semikolon enthalten\r\n    3.2) Leeres Feld im Eintrag ist \"\"\r\n    */\r\n    const handleFileUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        // Mal kucken ob das file überhaupt existiert\r\n        if (!file) return;\r\n/*\r\n            // Header (1. Zeile im csv) und Rows extrahieren\r\n            const text = await file.text();\r\n            const rows = text.split('\\n').map(row => row.trim()).filter(Boolean);\r\n            const headers = rows[0].split(';').map(h => h.trim());\r\n        \r\n            // JSON bauen mit den Header Feldern und den dazugehörigen Values\r\n            const entries = rows.slice(1).map(row => {\r\n                const values = row.split(';').map(v => v.trim());\r\n                const obj = {};\r\n                headers.forEach((header, i) => {\r\n                obj[header] = values[i];\r\n                });\r\n                return obj;\r\n            });\r\n*/\r\n            Papa.parse(file, {\r\n              header: true,\r\n              delimiter: ';',\r\n              skipEmptyLines: true,\r\n              complete: async function (results) {\r\n                console.log('Parsed data:', results.data);\r\n\r\n                for (const entry of results.data) {\r\n                  try {\r\n                    const res = await fetch('/api/papers', {\r\n                      method: 'POST',\r\n                      headers: { 'Content-Type': 'application/json' },\r\n                      body: JSON.stringify(entry),\r\n                    });\r\n\r\n                    if (!res.ok) {\r\n                      console.error('Failed to insert paper:', entry, await res.text());\r\n                    }\r\n                  } catch (err) {\r\n                    console.error('Fetch error:', err);\r\n                  }\r\n                }\r\n\r\n                alert('All data inserted!');\r\n              },\r\n              error: function (error) {\r\n                console.error('Error parsing CSV:', error);\r\n              }\r\n            });\r\n\r\n    return (\r\n        <>\r\n            <Filter\r\n                setStartYear={setStartYear}\r\n                setEndYear={setEndYear}\r\n                setModeling={setModeling}\r\n                setExtraction={setExtraction}\r\n                setVerification={setVerification}\r\n                setMonitoring={setMonitoring}\r\n                setAudit={setAudit}\r\n                setReporting={setReporting}\r\n                setExplanation={setExplanation}\r\n                setRecovery={setRecovery}\r\n                setResolution={setResolution}\r\n\r\n                setRegulatoryDocuments={setRegulatoryDocuments}\r\n                setPureTextRequirements={setPureTextRequirements}\r\n                setInternalPolicies={setInternalPolicies}\r\n                setBpModels={setBpModels}\r\n                setBpDescripion={setBpDescripion}\r\n                setEventLogs={setEventLogs}\r\n                setFormalizedConstraints={setFormalizedConstraints}\r\n                setSemiformalizedConstraints={setSemiformalizedConstraints}\r\n\r\n                natureOfData={natureOfData}\r\n                setNatureOfData={setNatureOfData}\r\n\r\n                setSearchTerm={setSearchTerm}\r\n            />\r\n            <div className='button_container'>\r\n              <button className=\"insert_data\" onClick={handleInsertClick}>Insert Data</button>\r\n              <button className=\"delete_data\" onClick={handleDeleteAll}>Delete All Papers</button>\r\n            </div>\r\n            <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                onChange={handleFileUpload}\r\n                style={{ display: 'none' }}\r\n            />\r\n\r\n            <div className='table-scroll-container'>\r\n              <div className=\"home\">\r\n              <Header />\r\n                  <div className='papers'>\r\n                      {papers && papers.map((paper) => {\r\n                          const inYearRange = startYear === null && endYear === null || paper.year >= startYear && paper.year <= endYear;\r\n\r\n                          const acceptedFocusValues = [\r\n                            \"Main Focus\",\r\n                            \"Secondary Focus\",\r\n                            \"Mentioned in Future Work\"\r\n                          ];\r\n\r\n                          const modelingMatch = modeling\r\n                          ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceElicitation_Modeling)\r\n                          : true;\r\n\r\n                        const extractionMatch = extraction\r\n                          ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceElicitation_Extraction)\r\n                          : true;\r\n\r\n                        const verificationMatch = verification\r\n                          ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceChecking_Verification)\r\n                          : true;\r\n\r\n                        const monitoringMatch = monitoring\r\n                          ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceChecking_EnforcementMonitoring)\r\n                          : true;\r\n\r\n                        const auditMatch = audit\r\n                          ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceChecking_Audit)\r\n                          : true;\r\n\r\n                        const reportingMatch = reporting\r\n                          ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceAnalysis_Reporting)\r\n                          : true;\r\n\r\n                        const explanationMatch = explanation\r\n                          ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceAnalysis_Explanation)\r\n                          : true;\r\n\r\n                        const recoveryMatch = recovery\r\n                          ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceEnhancement_Recovery)\r\n                          : true;\r\n\r\n                        const resolutionMatch = resolution\r\n                          ? acceptedFocusValues.includes(paper.BPC_Task_ComplianceEnhancement_Resolution)\r\n                          : true;\r\n                          const regulatoryDocumentsMatch = regulatoryDocuments\r\n                              ? paper.TypeOfData_RegulatoryDocuments.toLowerCase().startsWith(\"yes\")\r\n                              : true\r\n\r\n                          const pureTextRequirementsMatch = pureTextRequirements\r\n                              ? paper.TypeOfData_PureTextRequirements.toLowerCase().startsWith(\"yes\")\r\n                              : true\r\n                          \r\n                          const internalPoliciesMatch = internalPolicies\r\n                              ? paper.TypeOfData_InternalPolicies.toLowerCase().startsWith(\"yes\")\r\n                              : true\r\n                          \r\n                          const bpModelsMatch = bpModels\r\n                              ? paper.TypeOfData_BPModels.toLowerCase().startsWith(\"yes\")\r\n                              : true\r\n                          \r\n                          const bpDescripionMatch = bpDescripion\r\n                              ? paper.TypeOfData_BPDescription.toLowerCase().startsWith(\"yes\")\r\n                              : true\r\n\r\n                          const eventLogsMatch = eventLogs\r\n                              ? paper.TypeOfData_EventLogs.toLowerCase().startsWith(\"yes\")\r\n                              : true\r\n\r\n                          const formalizedConstraintsMatch = formalizedConstraints\r\n                              ? paper.TypeOfData_FormalizedConstraints.toLowerCase().startsWith(\"yes\")\r\n                              : true\r\n\r\n                          const semiformalizedConstraintsMatch = semiformalizedConstraints\r\n                              ? paper.TypeOfData_SemiformalizedConstraints.toLowerCase().startsWith(\"yes\")\r\n                              : true\r\n\r\n                          const natureOfDataSyntheticMatch = natureOfData.toLowerCase() === \"synthetic\"\r\n                              ? paper.FAQ_NatureOfData.toLowerCase() === \"synthetic\"\r\n                              : true\r\n\r\n                          const natureOfDataRealworldMatch = natureOfData.toLowerCase() === \"real-world\"\r\n                              ? paper.FAQ_NatureOfData.toLowerCase() === \"real-world\"\r\n                              : true\r\n                        \r\n                          const matchesAll =\r\n                            inYearRange &&\r\n                            modelingMatch &&\r\n                            extractionMatch &&\r\n                            verificationMatch &&\r\n                            monitoringMatch &&\r\n                            auditMatch &&\r\n                            reportingMatch &&\r\n                            explanationMatch &&\r\n                            recoveryMatch &&\r\n                            resolutionMatch &&\r\n                            regulatoryDocumentsMatch &&\r\n                            pureTextRequirementsMatch &&\r\n                            internalPoliciesMatch &&\r\n                            bpModelsMatch &&\r\n                            bpDescripionMatch &&\r\n                            eventLogsMatch &&\r\n                            formalizedConstraintsMatch &&\r\n                            semiformalizedConstraintsMatch &&\r\n                            natureOfDataSyntheticMatch &&\r\n                            natureOfDataRealworldMatch &&\r\n\r\n                            paper.doi.includes(searchTerm)\r\n                      \r\n                          return (\r\n                              matchesAll && (\r\n                                  <PaperEntry\r\n                                      key={paper._id}\r\n                                      paper={paper}\r\n                                      setChosenPaper={setChosenPaper}\r\n                                  />\r\n                              )\r\n                          );\r\n                      })}\r\n                  </div>\r\n              </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n}\r\nexport default Home"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}