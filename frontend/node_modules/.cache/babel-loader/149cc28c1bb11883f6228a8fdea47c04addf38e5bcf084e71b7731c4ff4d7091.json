{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cuong Tran Vu\\\\ba-phase3\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\n\n// components\nimport PaperEntry from '../components/PaperEntry';\nimport Header from '../components/Header';\nimport Filter from '../components/Filter';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  setChosenPaper\n}) => {\n  _s();\n  // States\n  const [papers, setPapers] = useState(null); // array an paper Objekten [{paper 1..., paper 2..., ...}]\n  // Übersetzt wäre das:\n  // papers = null\n  // wenn wert von papers geändert wird:\n  // papers = <neuer Wert> (aber ist nicht erlaubt)\n  // ---\n  // Wert von papers ändern:\n  // setPapers(<neuer Wert>)\n  const fileInputRef = useRef(null);\n  const [startYear, setStartYear] = useState(null);\n  const [endYear, setEndYear] = useState(null);\n  const [modeling, setModeling] = useState(false);\n  const [extraction, setExtraction] = useState(false);\n  const [verification, setVerification] = useState(false);\n  const [monitoring, setMonitoring] = useState(false);\n  const [audit, setAudit] = useState(false);\n  const [reporting, setReporting] = useState(false);\n  const [explanation, setExplanation] = useState(false);\n  const [recovery, setRecovery] = useState(false);\n  const [resolution, setResolution] = useState(false);\n\n  // useEffect hook: rufe diesen Code nur einmalig auf (wenn Home Component erstmalig gerendert wird)\n  useEffect(() => {\n    const fetchPapers = async () => {\n      //quasi das gleiche was zum testen vorher in Postman gemacht wurde, GET all papers aufrufen\n      const response = await fetch('/api/papers');\n      // response in json Format umwandeln\n      const json = await response.json();\n\n      // Statuscode = 2xx => alles ok mit der response\n      if (response.ok) {\n        setPapers(json);\n        // weil papers = json IST NICHT VALIDE\n      }\n    };\n    fetchPapers();\n  }, [startYear, endYear, modeling, extraction, verification, monitoring, audit, reporting, explanation, recovery, resolution]);\n\n  // Alle Papers löschen\n  const handleDeleteAll = async () => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete ALL papers? This cannot be undone.\");\n    if (!confirmDelete) return;\n    try {\n      const res = await fetch('/api/papers', {\n        method: 'DELETE'\n      });\n      if (res.ok) {\n        alert('All papers deleted!');\n        window.location.reload();\n      } else {\n        const error = await res.json();\n        alert('Failed to delete papers: ' + error.error);\n      }\n    } catch (err) {\n      console.error('Error deleting all papers:', err);\n      alert('Something went wrong while deleting.');\n    }\n  };\n\n  // Funktionen, um den Fileexplorer zu öffnen und die ausgewählte .csv-Datei in die Datenbank einzulesen\n\n  //File Explorer öffnen\n  const handleInsertClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // Paper in Database speichern\n  // WICHTIG: Das .csv muss die Folgenden Felder in der 1. Zeile stehen haben (Reihenfolge egal)\n  // title,abstract,numberOfCitations,doi,year,typeOfPaper,dataAccessible,BPC_Task_ComplianceElicitation_Modeling,BPC_Task_ComplianceElicitation_Extraction,BPC_Task_ComplianceChecking_Verification,BPC_Task_ComplianceChecking_EnforcementMonitoring,BPC_Task_ComplianceChecking_Audit,BPC_Task_ComplianceAnalysis_Reporting,BPC_Task_ComplianceAnalysis_Explanation,BPC_Task_ComplianceEnhancement_Recovery,BPC_Task_ComplianceEnhancement_Resolution,BPC_Task_Others,TypeOfData_RegulatoryDocuments,TypeOfData_PureTextRequirements,TypeOfData_InternalPolicies,TypeOfData_BPModels,TypeOfData_BPDescription,TypeOfData_EventLogs,TypeOfData_FormalizedConstraints,TypeOfData_SemiformalizedConstraints,TypeOfData_Others,FAQ_OtherDataInFuture,FAQ_DataProcessed,FAQ_DataConverter,FAQ_LimitationsOfDataset,FAQ_NatureOfData,FAQ_MoreThanOneVersion,FAQ_ComplianceLevelOrDegree,FAQ_Stakeholders\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    // Mal kucken ob das file überhaupt existiert\n    if (!file) return;\n    try {\n      // Header (1. Zeile im csv) und Rows extrahieren\n      const text = await file.text();\n      const rows = text.split('\\n').map(row => row.trim()).filter(Boolean);\n      const headers = rows[0].split(',').map(h => h.trim());\n\n      // JSON bauen mit den Header Feldern und den dazugehörigen Values\n      const entries = rows.slice(1).map(row => {\n        const values = row.split(',').map(v => v.trim());\n        const obj = {};\n        headers.forEach((header, i) => {\n          obj[header] = values[i];\n        });\n        return obj;\n      });\n      console.log(\"Entries to add: \", entries);\n\n      // POST jeder Eintrag in die Datenbank\n      for (const entry of entries) {\n        const res = await fetch('/api/papers', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(entry)\n        });\n        if (!res.ok) {\n          console.error('Failed to insert paper:', entry, await res.text());\n        }\n      }\n      alert('All data inserted!');\n      window.location.reload();\n    } catch (err) {\n      console.error('Error uploading file:', err);\n      alert('Upload failed.');\n    }\n  };\n  console.log('State:', {\n    startYear,\n    endYear,\n    modeling,\n    extraction,\n    verification,\n    monitoring,\n    audit,\n    reporting,\n    explanation,\n    recovery,\n    resolution\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      setStartYear: setStartYear,\n      setEndYear: setEndYear,\n      setModeling: setModeling,\n      setExtraction: setExtraction,\n      setVerification: setVerification,\n      setMonitoring: setMonitoring,\n      setAudit: setAudit,\n      setReporting: setReporting,\n      setExplanation: setExplanation,\n      setRecovery: setRecovery,\n      setResolution: setResolution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInsertClick,\n      children: \"Insert Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileInputRef,\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"papers\",\n        children: papers && papers.map(paper => {\n          const inYearRange = paper.year >= startYear && paper.year <= endYear;\n          const modelingMatch = modeling ? paper.BPC_Task_ComplianceElicitation_Modeling === \"Main Focus\" : true;\n          const matchesAll = inYearRange && modelingMatch;\n          return matchesAll && /*#__PURE__*/_jsxDEV(PaperEntry, {\n            paper: paper,\n            setChosenPaper: setChosenPaper\n          }, paper._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteAll,\n      style: {\n        backgroundColor: 'crimson',\n        color: 'white',\n        marginLeft: '10px'\n      },\n      children: \"Delete All Papers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"OQx3LmGBS+5mGY4/L9JP0HNx0zc=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useRef","PaperEntry","Header","Filter","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","setChosenPaper","_s","papers","setPapers","fileInputRef","startYear","setStartYear","endYear","setEndYear","modeling","setModeling","extraction","setExtraction","verification","setVerification","monitoring","setMonitoring","audit","setAudit","reporting","setReporting","explanation","setExplanation","recovery","setRecovery","resolution","setResolution","fetchPapers","response","fetch","json","ok","handleDeleteAll","confirmDelete","window","confirm","res","method","alert","location","reload","error","err","console","handleInsertClick","current","click","handleFileUpload","e","file","target","files","text","rows","split","map","row","trim","filter","Boolean","headers","h","entries","slice","values","v","obj","forEach","header","i","log","entry","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","type","accept","onChange","style","display","className","paper","inYearRange","year","modelingMatch","BPC_Task_ComplianceElicitation_Modeling","matchesAll","_id","backgroundColor","color","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Cuong Tran Vu/ba-phase3/frontend/src/pages/Home.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react'\r\n\r\n// components\r\nimport PaperEntry from '../components/PaperEntry'\r\nimport Header from '../components/Header'\r\nimport Filter from '../components/Filter'\r\n\r\nconst Home = ({setChosenPaper }) => {\r\n    // States\r\n    const [papers, setPapers] = useState(null) // array an paper Objekten [{paper 1..., paper 2..., ...}]\r\n    // Übersetzt wäre das:\r\n    // papers = null\r\n    // wenn wert von papers geändert wird:\r\n    // papers = <neuer Wert> (aber ist nicht erlaubt)\r\n    // ---\r\n    // Wert von papers ändern:\r\n    // setPapers(<neuer Wert>)\r\n    const fileInputRef = useRef(null);\r\n    const [startYear, setStartYear] = useState(null)\r\n    const [endYear, setEndYear] = useState(null)\r\n    const [modeling, setModeling] = useState(false)\r\n    const [extraction, setExtraction] = useState(false)\r\n    const [verification, setVerification] = useState(false)\r\n    const [monitoring, setMonitoring] = useState(false)\r\n    const [audit, setAudit] = useState(false)\r\n    const [reporting, setReporting] = useState(false)\r\n    const [explanation, setExplanation] = useState(false)\r\n    const [recovery, setRecovery] = useState(false)\r\n    const [resolution, setResolution] = useState(false)\r\n\r\n    // useEffect hook: rufe diesen Code nur einmalig auf (wenn Home Component erstmalig gerendert wird)\r\n    useEffect(() => {\r\n        const fetchPapers = async () => {\r\n            //quasi das gleiche was zum testen vorher in Postman gemacht wurde, GET all papers aufrufen\r\n            const response = await fetch('/api/papers')\r\n            // response in json Format umwandeln\r\n            const json = await response.json()\r\n\r\n            // Statuscode = 2xx => alles ok mit der response\r\n            if (response.ok) {\r\n                setPapers(json)\r\n                // weil papers = json IST NICHT VALIDE\r\n            }\r\n        }\r\n\r\n        fetchPapers()\r\n    }, [startYear, endYear, modeling, extraction, verification, monitoring, audit, reporting, explanation, recovery, resolution])\r\n\r\n    // Alle Papers löschen\r\n    const handleDeleteAll = async () => {\r\n        const confirmDelete = window.confirm(\"Are you sure you want to delete ALL papers? This cannot be undone.\");\r\n      \r\n        if (!confirmDelete) return;\r\n      \r\n        try {\r\n          const res = await fetch('/api/papers', {\r\n            method: 'DELETE',\r\n          });\r\n      \r\n          if (res.ok) {\r\n            alert('All papers deleted!');\r\n            window.location.reload();\r\n          } else {\r\n            const error = await res.json();\r\n            alert('Failed to delete papers: ' + error.error);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error deleting all papers:', err);\r\n          alert('Something went wrong while deleting.');\r\n        }\r\n      };\r\n\r\n    // Funktionen, um den Fileexplorer zu öffnen und die ausgewählte .csv-Datei in die Datenbank einzulesen\r\n\r\n    //File Explorer öffnen\r\n    const handleInsertClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n    \r\n    // Paper in Database speichern\r\n    // WICHTIG: Das .csv muss die Folgenden Felder in der 1. Zeile stehen haben (Reihenfolge egal)\r\n    // title,abstract,numberOfCitations,doi,year,typeOfPaper,dataAccessible,BPC_Task_ComplianceElicitation_Modeling,BPC_Task_ComplianceElicitation_Extraction,BPC_Task_ComplianceChecking_Verification,BPC_Task_ComplianceChecking_EnforcementMonitoring,BPC_Task_ComplianceChecking_Audit,BPC_Task_ComplianceAnalysis_Reporting,BPC_Task_ComplianceAnalysis_Explanation,BPC_Task_ComplianceEnhancement_Recovery,BPC_Task_ComplianceEnhancement_Resolution,BPC_Task_Others,TypeOfData_RegulatoryDocuments,TypeOfData_PureTextRequirements,TypeOfData_InternalPolicies,TypeOfData_BPModels,TypeOfData_BPDescription,TypeOfData_EventLogs,TypeOfData_FormalizedConstraints,TypeOfData_SemiformalizedConstraints,TypeOfData_Others,FAQ_OtherDataInFuture,FAQ_DataProcessed,FAQ_DataConverter,FAQ_LimitationsOfDataset,FAQ_NatureOfData,FAQ_MoreThanOneVersion,FAQ_ComplianceLevelOrDegree,FAQ_Stakeholders\r\n    const handleFileUpload = async (e) => {\r\n        const file = e.target.files[0];\r\n        // Mal kucken ob das file überhaupt existiert\r\n        if (!file) return;\r\n    \r\n        try {\r\n            // Header (1. Zeile im csv) und Rows extrahieren\r\n            const text = await file.text();\r\n            const rows = text.split('\\n').map(row => row.trim()).filter(Boolean);\r\n            const headers = rows[0].split(',').map(h => h.trim());\r\n        \r\n            // JSON bauen mit den Header Feldern und den dazugehörigen Values\r\n            const entries = rows.slice(1).map(row => {\r\n                const values = row.split(',').map(v => v.trim());\r\n                const obj = {};\r\n                headers.forEach((header, i) => {\r\n                obj[header] = values[i];\r\n                });\r\n                return obj;\r\n            });\r\n\r\n            console.log(\"Entries to add: \", entries)\r\n        \r\n            // POST jeder Eintrag in die Datenbank\r\n            for (const entry of entries) {\r\n                const res = await fetch('/api/papers', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(entry),\r\n                });\r\n        \r\n                if (!res.ok) {\r\n                console.error('Failed to insert paper:', entry, await res.text());\r\n                }\r\n            }\r\n        \r\n            alert('All data inserted!');\r\n            window.location.reload();\r\n        } catch (err) {\r\n            console.error('Error uploading file:', err);\r\n            alert('Upload failed.');\r\n        }\r\n    };\r\n\r\n    console.log('State:', { startYear, endYear, modeling, extraction, verification, monitoring, audit, reporting, explanation, recovery, resolution });\r\n\r\n    return (\r\n        <>\r\n            <Filter\r\n                setStartYear={setStartYear}\r\n                setEndYear={setEndYear}\r\n                setModeling={setModeling}\r\n                setExtraction={setExtraction}\r\n                setVerification={setVerification}\r\n                setMonitoring={setMonitoring}\r\n                setAudit={setAudit}\r\n                setReporting={setReporting}\r\n                setExplanation={setExplanation}\r\n                setRecovery={setRecovery}\r\n                setResolution={setResolution}\r\n            />\r\n            <button onClick={handleInsertClick}>Insert Data</button>\r\n            <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                onChange={handleFileUpload}\r\n                style={{ display: 'none' }}\r\n            />\r\n            <div className=\"home\">\r\n            <Header />\r\n                <div className='papers'>\r\n                    {papers && papers.map((paper) => {\r\n                        const inYearRange = paper.year >= startYear && paper.year <= endYear;\r\n\r\n                        const modelingMatch = modeling ? paper.BPC_Task_ComplianceElicitation_Modeling===\"Main Focus\" : true\r\n                        \r\n\r\n                        const matchesAll =\r\n                            inYearRange &&\r\n                            modelingMatch;\r\n                    \r\n                        return (\r\n                            matchesAll && (\r\n                                <PaperEntry\r\n                                    key={paper._id}\r\n                                    paper={paper}\r\n                                    setChosenPaper={setChosenPaper}\r\n                                />\r\n                            )\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <button onClick={handleDeleteAll} style={{ backgroundColor: 'crimson', color: 'white', marginLeft: '10px' }}>\r\n                Delete All Papers\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}